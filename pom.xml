<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.7</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.dlepe.twitchchatanalyzer</groupId>
	<artifactId>twitch-chat-analyzer</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Twitch Chat Analyzer</name>
	<description>Twitch chat API for parsing chatlog data</description>
	<properties>
		<java.version>18</java.version>
		<aws.sdk.version>2.17.190</aws.sdk.version>
		<swagger.annotations.version>2.2.0</swagger.annotations.version>
		<spring.fox.version>3.0.0</spring.fox.version>
		<dockerfile.maven.version>1.4.13</dockerfile.maven.version>
		<jaxb.api.version>2.3.1</jaxb.api.version>
		<jaxb.runtime.version>2.3.6</jaxb.runtime.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger.annotations.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>${jaxb.api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>${jaxb.runtime.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>dynamodb</artifactId>
			<version>${aws.sdk.version}</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>io.swagger.codegen.v3</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>3.0.34</version>
				<executions>
					<execution>
						<id>justlog</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/openapi/justlog.yaml</inputSpec>
							<language>spring</language>
							<generateApis>false</generateApis>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<apiPackage>com.dlepe.model.justlog</apiPackage>
							<modelPackage>com.dlepe.model.justlog</modelPackage>
							<configOptions>
								<sourceFolder>src/gen/java/main</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>twitchapi</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/openapi/twitch-helix.yaml</inputSpec>
							<language>spring</language>
							<generateApis>false</generateApis>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<apiPackage>com.dlepe.model.twitch.helix</apiPackage>
							<modelPackage>com.dlepe.model.twitch.helix</modelPackage>
							<configOptions>
								<sourceFolder>src/gen/java/main</sourceFolder>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<layers>
						<enabled>true</enabled>
					</layers>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
					<mainClass>com.dlepe.twitchchatanalyzer.TwitchChatAnalyzerApplication</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>docker-build</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>buildx</argument>
								<argument>build</argument>
								<argument>-f</argument>
								<argument>./Dockerfile</argument>
								<argument>--load</argument>
								<argument>--build-arg</argument>
								<argument>JAR_FILE=target/${project.build.finalName}.jar</argument>
								<argument>-t</argument>
								<argument>dlepe/${project.artifactId}:${project.version}</argument>
								<argument>-t</argument>
								<argument>dlepe/${project.artifactId}:latest</argument>
								<argument>.</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>